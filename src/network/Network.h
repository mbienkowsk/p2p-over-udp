#ifndef NETWORK_H
#define NETWORK_H
#include <arpa/inet.h>
#include <cstring>
#include <functional>
#include <netinet/in.h>
#include <sys/socket.h>
#include <thread>
#include <unistd.h>

#include "Message.h"

void setup_broadcast_socket(int &sock);

void broadcast(int sock, struct sockaddr_in &broadcast_addr,
               const ResourceAnnounceMessage &msg);

class BroadcastSender {
public:
  BroadcastSender(int port, const std::string &broadcast_addr_str);

  /// Returns a thread that sends the given generated by callback suplied in
  /// argument Argument is a function that returns a message to be sent
  std::thread make_worker(std::function<ResourceAnnounceMessage()> msg_gen);

private:
  int sock_ = -1;
  std::unique_ptr<struct sockaddr_in> broadcast_addr_;
  int port_;
  const std::string &broadcast_addr_str_;
};

#endif
